---
export interface RagamInfoItem {
  title: string;
  desc: string;
  img: string;
}

interface Props {
  ragamInfo: RagamInfoItem[];
}

const { ragamInfo } = Astro.props as Props;
---

<div class="swiper mySwiper bg-transparent md:flex w-full relative">
  <div class="swiper-wrapper">
    {
      ragamInfo.map((data) => (
        <div class="swiper-slide">
          <div class="flex justify-between items-center flex-col md:flex-row gap-2">
          <div class="flex justify-center items-center">
            <div class="aspect-square flex items-center w-32 md:w-48 lg:w-64 rounded-full justify-center bg-dark-base">
              <img src={data.img} alt={data.title} class="w-full" />
            </div>
          </div>
          <div class=" text-center md:text-left md:max-w-lg lg:max-w-2xl overflow-visible">
            <h3 class="font-heading sub-header-font-size mb-2 ">
              {data.title}
            </h3>
            <p class="small-font-size ">{data.desc}</p>
          </div>
          </div>
        </div>
      ))
    }
  </div>
  <div class="swiper-button-prev -translate-y-4 md:hidden"></div>
  <div class="swiper-button-next -translate-y-4 md:hidden"></div>
</div>
<div
  class="overflow-y-auto scrollbar-track-rounded-xl scrollbar-thumb-rounded-full scrollbar-track-white-base scrollbar-thumb-yellow-base scrollbar-thin bg-dark-base text-white-base w-1/4 px-6 py-4 rounded-md gap-1 flex-col ragam-pagination hidden md:flex"
  data-aos="fade-up-left"
  data-aos-duration="600"
  data-aos-delay="200"
  data-aos-easing="ease-out"
  data-aos-offset="300"
  data-aos-once="true"
>
  {
    ragamInfo.map((data, index) => (
      <p
        class="cursor-pointer ragam-title hover:text-yellow-base hover:font-medium transition-all duration-300 small-font-size"
        data-slide-index={index}
      >
        {data.title}
      </p>
    ))
  }
</div>

<style>
  @media (min-width: 768px) {
    .swiper-button-prev,
    .swiper-button-next {
      display: none;
    }
  }

  .swiper-button-prev::after,
  .swiper-button-next::after {
    font-size: 2rem;
  }
</style>

<script>
  import Swiper from "swiper/bundle";
  import "swiper/swiper-bundle.css";

  const swiper = new Swiper(".mySwiper", {
    direction: window.innerWidth > 768 ? "vertical" : "horizontal",
    mousewheel: true,
    navigation: {
      nextEl: ".swiper-button-next",
      prevEl: ".swiper-button-prev",
    },
    on: {
      slideChange: function (params) {
        updateActiveTitle(params.activeIndex);
      },
      resize: function (params) {
        params.changeDirection(getdir());
      },
    },
  });

  function getdir() {
    return window.innerWidth > 768 ? "vertical" : "horizontal";
  }

  function updateActiveTitle(activeIndex: number) {
    const titles = document.querySelectorAll(".ragam-title");
    titles.forEach((title, index) => {
      if (index === activeIndex) {
        title.classList.add("text-yellow-base");
      } else {
        title.classList.remove("text-yellow-base");
      }
    });
  }

  const titles = document.querySelectorAll(".ragam-title");
  titles.forEach((title, index) => {
    title.addEventListener("click", (event) => {
      event.preventDefault();
      swiper.slideTo(index);
    });
  });

  updateActiveTitle(swiper.activeIndex);
</script>
